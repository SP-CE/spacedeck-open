on:
    push:
        branches:
        - spce-dev
name: Deploy spacedeck dev

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
        # checkout the repo
        - uses: actions/checkout@v2

        - name: Set env
          run: echo "VERSIONED_IMAGE=${{ github.run_id }}" >> $GITHUB_ENV

        - name: Cache node modules
          uses: actions/cache@v2
          id: npm-cache
          with:
            path: node_modules
            key: spacedeck-node_modules-${{ hashFiles('**/package-lock.json') }}

        - uses: actions/setup-node@v3
          with:
            node-version: 14

        - name: Install Dependencies
          if: steps.npm-cache.outputs.cache-hit != 'true'
          run: |
            npm install
        - name: Build Style
          run: |
            gulp styles

        - name: 'Build and push image'
          uses: docker/login-action@v1
          with:
            registry: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
        - run: |
                echo "Release version: ${{ env.VERSIONED_IMAGE }}"
                docker build --rm -t spacedeck-open:${{ env.VERSIONED_IMAGE }} .
                docker tag spacedeck-open:${{ env.VERSIONED_IMAGE }} nclong87/spacedeck-open:latest
                docker tag spacedeck-open:${{ env.VERSIONED_IMAGE }} nclong87/spacedeck-open:${{ env.VERSIONED_IMAGE }}
                docker image push nclong87/spacedeck-open:latest
                docker image push nclong87/spacedeck-open:${{ env.VERSIONED_IMAGE }}

        # - name: 'Deploy to Azure App Service'
        #   uses: 'azure/webapps-deploy@v2'
        #   with:
        #     app-name: 'meetingmaker-spacedeck-dev'
        #     images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/spacedeck-open:${{ github.run_id }}
