on:
    push:
        branches:
        - spce-dev
name: Deploy spacedeck dev

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
        # checkout the repo
        - uses: actions/checkout@v3

        - name: Set env
          run: echo "VERSIONED_IMAGE=${{ github.sha }}" >> $GITHUB_ENV

        - name: Cache node modules
          uses: actions/cache@v2
          id: npm-cache
          with:
            path: node_modules
            key: spacedeck-node_modules-${{ hashFiles('**/package-lock.json') }}

        - uses: actions/setup-node@v3
          with:
            node-version: 14

        - name: Install Dependencies
          if: steps.npm-cache.outputs.cache-hit != 'true'
          run: |
            npm install

        # - name: Build Style
        #   run: |
        #     gulp styles
        #     rm -rvf node_modules/gulp*

        - name: 'Build and push image'
          uses: docker/login-action@v1
          with:
            registry: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
        - run: |
                docker build --rm -t spacedeck-open:${{ github.sha }} .
                docker tag spacedeck-open:${{ github.sha }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/spacedeck-open:${{ github.sha }}
                docker tag spacedeck-open:${{ github.sha }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/spacedeck-open:latest
                docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/spacedeck-open:${{ github.sha }}
                docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/spacedeck-open:latest

        # - name: 'Deploy to Azure App Service'
        #   uses: 'azure/webapps-deploy@v2'
        #   with:
        #     app-name: 'meetingmaker-spacedeck-dev'
        #     images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/spacedeck-open:${{ github.run_id }}
