on:
    push:
        tags:
        - '*.*.*'

name: Deploy spacedeck SPCE Production

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
        # checkout the repo
        - uses: actions/checkout@v3

        - name: Setup node
          uses: actions/setup-node@v3
          with:
            node-version: 14

        - name: Set Release candidate version
          run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

        - name: Cache node modules
          uses: actions/cache@v2
          id: npm-cache
          with:
            path: node_modules
            key: spacedeck-node_modules-${{ hashFiles('**/package-lock.json') }}

        - name: Install Dependencies
          if: steps.npm-cache.outputs.cache-hit != 'true'
          run: |
            npm install
        - name: Build Style
          run: |
            gulp styles

        - name: 'Build and push image'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER_PROD }}
            username: ${{ secrets.REGISTRY_USERNAME_PROD }}
            password: ${{ secrets.REGISTRY_PASSWORD_PROD }}
        - run: |
            docker build . -t spacedeck-open:${{ github.sha }}
            docker tag spacedeck-open:${{ github.sha }} ${{ secrets.REGISTRY_LOGIN_SERVER_PROD }}/spacedeck-open:${{ github.sha }}
            docker tag spacedeck-open:${{ github.sha }} ${{ secrets.REGISTRY_LOGIN_SERVER_PROD }}/spacedeck-open:${{ env.RELEASE_VERSION }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER_PROD }}/spacedeck-open:${{ github.sha }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER_PROD }}/spacedeck-open:${{ env.RELEASE_VERSION }}
